// Given an integer array nums, find the subarraywith the largest sum, and return its sum.\
BRUTE:
class Solution {
    public int maxSubArray(int[] nums) {
        int n=nums.length;
        int maxi=Integer.MIN_VALUE;
        for(int i=0;i<n;i++)
        {
            for(int j=i;j<n;j++)
            {
                int sum=0;
                for(int k=i;k<=j;k++)
                {
                    sum+=nums[k];
                    maxi=Math.max(sum,maxi);
                }
            }
        }
        return maxi;
        
    }
}

BETTER:

class Solution {
    public int maxSubArray(int[] nums) {
        int n=nums.length;
        int maxi=Integer.MIN_VALUE;
        for(int i=0;i<n;i++)
        {
            int sum=0;
            for(int j=i;j<n;j++)
            {
                
                sum+=nums[j];
                maxi=Math.max(maxi,sum);
            }
        }
        return maxi;
        
    }
}

OPTIMAL;
class Solution {
    public int maxSubArray(int[] nums) {
        int n=nums.length;
        int sum=0;
        int maxi=Integer.MIN_VALUE;
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];

            if(sum>maxi)
            {
                maxi=sum;
            }

            if(sum<0)
            {
                sum=0;
            }
        }
        return maxi;
    }
}