//You are given an array prices where prices[i] is the price of a given stock on the ith day.You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.
BRUTE:
class Solution {
    public int maxProfit(int[] prices) {
        int n=prices.length;
        int profit=0;
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(prices[j]>prices[i])
                {
                    profit=Math.max(prices[j]-prices[i],profit);
                }
            }
        }
        return profit;
    }
}

OPTIMAL;
class Solution {
    public int maxProfit(int[] prices) {
        int n=prices.length;
        int profit=0;
        int mini=prices[0];
        for(int i=0;i<n;i++)
        {
            int cost=prices[i]-mini;
            profit=Math.max(profit,cost);
            mini=Math.min(mini,prices[i]);
        }
        return profit;
    }
}